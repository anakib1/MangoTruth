definitions:
  modules.DetectionQuery:
    properties:
      request_id:
        description: |-
          RequestID is the unique identifier for the detection request
          required: true
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
    required:
    - request_id
    type: object
  modules.DetectionRequest:
    description: DetectionRequest contains the request UUID and content to be analyzed
    properties:
      content:
        description: |-
          Content to be analyzed for detection
          required: true
          example: This is the content to be analyzed.
        example: This is the content to be analyzed.
        type: string
      detector_name:
        description: |-
          DetectorName of detector to make inference on
          required: true
          example: ghostbuster
        example: ghostbuster
        type: string
    type: object
  modules.DetectionStatus:
    description: DetectionStatus includes the status of the request and the verdict
    properties:
      request_id:
        description: |-
          RequestID is the unique identifier for the detection request
          required: true
          example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        example: f47ac10b-58cc-4372-a567-0e02b2c3d479
        type: string
      status:
        description: |-
          Status is the current status of the detection request
          Enum: "REJECTED" "FAILED" "IN_PROGRESS" "FINISHED"
          required: true
          example: IN_PROGRESS
        example: IN_PROGRESS
        type: string
      verdict:
        allOf:
        - $ref: '#/definitions/modules.Verdict'
        description: |-
          Verdict is the result of the detection (optional)
          It can be null if no verdict is available yet
    required:
    - request_id
    type: object
  modules.Label:
    properties:
      label:
        description: |-
          Label name (e.g., "plagiarism" or "ai-generated")
          example: plagiarism
        example: plagiarism
        type: string
      probability:
        description: |-
          Probability of the label being true
          example: 0.85
        example: 0.85
        type: number
    type: object
  modules.Verdict:
    properties:
      labels:
        description: Labels with associated probabilities
        items:
          $ref: '#/definitions/modules.Label'
        type: array
    type: object
info:
  contact: {}
paths:
  /api/v1/detection:
    get:
      consumes:
      - application/json
      description: Fetch the detection status and verdict by requestId.
      parameters:
      - description: Detection Query Request
        in: body
        name: detectionQuery
        required: true
        schema:
          $ref: '#/definitions/modules.DetectionQuery'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modules.DetectionStatus'
        "400":
          description: Missing requestId parameter
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Request not found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get the detection status
    put:
      consumes:
      - application/json
      description: Submit a detection request for processing.
      parameters:
      - description: Detection Request
        in: body
        name: detectionRequest
        required: true
        schema:
          $ref: '#/definitions/modules.DetectionRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/modules.DetectionStatus'
        "400":
          description: Invalid request body
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Submit a detection request
  /api/v1/detection/mass:
    get:
      consumes:
      - application/json
      description: Fetch the detection statuses for multiple request IDs. Optionally
        filter results by userId.
      parameters:
      - description: Optional userId to filter detection statuses
        in: query
        name: userId
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/modules.DetectionStatus'
            type: array
        "400":
          description: Invalid request parameters
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Get multiple detection statuses
swagger: "2.0"
